println "IsBuildModule:" + rootProject.ext.is_build_module
if (rootProject.ext.is_build_module) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            if (rootProject.ext.is_build_module) {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
                java.srcDirs += "src/main/debug/java/";
            } else {
                manifest.srcFile 'src/main/release/AndroidManifest.xml'
                java.srcDirs += "src/main/release/java/";
            }
        }
    }

    resourcePrefix "news_"
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile rootProject.ext.dependencies.junit
    compile rootProject.ext.dependencies.supportv7
    compile rootProject.ext.dependencies.constraint_layout

    compile rootProject.ext.dependencies.arouter_api
    annotationProcessor rootProject.ext.dependencies.arouter_compiler

    //compile project(':lib.frame')
}
